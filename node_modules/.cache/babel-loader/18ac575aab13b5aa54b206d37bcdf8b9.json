{"remainingRequest":"/Users/wangjian/Desktop/hht/hht-app-master/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!/Users/wangjian/Desktop/hht/hht-app-master/node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js!/Users/wangjian/Desktop/hht/hht-app-master/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/wangjian/Desktop/hht/hht-app-master/node_modules/_vue-loader@15.9.1@vue-loader/lib/index.js??vue-loader-options!/Users/wangjian/Desktop/hht/hht-app-master/src/views/Home/Ranking.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangjian/Desktop/hht/hht-app-master/src/views/Home/Ranking.vue","mtime":1588986811011},{"path":"/Users/wangjian/Desktop/hht/hht-app-master/.babelrc","mtime":1585901407366},{"path":"/Users/wangjian/Desktop/hht/hht-app-master/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangjian/Desktop/hht/hht-app-master/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangjian/Desktop/hht/hht-app-master/node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/wangjian/Desktop/hht/hht-app-master/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangjian/Desktop/hht/hht-app-master/node_modules/_vue-loader@15.9.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport { timestampToTime } from '../../common/date.js';\nexport default {\n  data: function data() {\n    return {\n      topList: [],\n      currentTime: null,\n      currentMouth: null,\n      updateTime: 0,\n      userid: null,\n      userList: [],\n      userScore: 0\n    };\n  },\n  computed: _objectSpread({}, mapState(['userBaby'])),\n  created: function created() {\n    this.current();\n    this.getBabyRanking();\n    console.log('userBaby===', this.userBaby);\n  },\n  methods: {\n    ameSplip: function ameSplip(name) {\n      try {\n        if (name.length > 10) {\n          return name.slice(0, 10) + '...';\n        } else {\n          return name;\n        }\n      } catch (e) {\n        console.log('宝宝名称', name); //TODO handle the exception\n      }\n    },\n    getBabyRanking: function getBabyRanking() {\n      var _this = this;\n\n      var self = this;\n      this.$axios.getBabyRanking(this.currentTime).then(function (res) {\n        _this.topList = res.data.data.list;\n        var babyArray = res.data.data.list;\n        _this.updateTime = timestampToTime(res.data.data.updatetime);\n        console.log('111', _this.updateTime);\n        _this.userid = localStorage.getItem('babyId');\n        babyArray.forEach(function (value, index) {\n          if (value.babyId == self.userid) {\n            self.userList = value;\n            self.userScore = index + 1;\n          }\n        });\n      })[\"catch\"](function (err) {});\n    },\n    current: function current() {\n      var dd = new Date();\n      var y = dd.getFullYear();\n      var m = dd.getMonth() + 1; //获取当前月份的日期\n\n      var d = dd.getDate();\n      this.currentTime = y + '-' + m + '-' + d;\n      this.currentMouth = m;\n    }\n  },\n  components: {}\n};",null]}