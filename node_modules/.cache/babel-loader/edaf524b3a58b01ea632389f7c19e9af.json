{"remainingRequest":"/Users/wangjian/Desktop/hht/hht-app-master/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!/Users/wangjian/Desktop/hht/hht-app-master/node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js!/Users/wangjian/Desktop/hht/hht-app-master/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/wangjian/Desktop/hht/hht-app-master/node_modules/_vue-loader@15.9.1@vue-loader/lib/index.js??vue-loader-options!/Users/wangjian/Desktop/hht/hht-app-master/src/views/Home/Report.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangjian/Desktop/hht/hht-app-master/src/views/Home/Report.vue","mtime":1586500416270},{"path":"/Users/wangjian/Desktop/hht/hht-app-master/.babelrc","mtime":1585901407366},{"path":"/Users/wangjian/Desktop/hht/hht-app-master/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangjian/Desktop/hht/hht-app-master/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangjian/Desktop/hht/hht-app-master/node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/wangjian/Desktop/hht/hht-app-master/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangjian/Desktop/hht/hht-app-master/node_modules/_vue-loader@15.9.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Title from '@/components/Title.vue';\nimport Radar from '@/components/Radar.vue';\nimport { mapActions, mapMutations, mapState, mapGetters } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      title: ['宝宝成长值', '宝宝成长潜力'],\n      age: '本月成长值',\n      size: ['24', '17',, '15', '12', '10'],\n      peportList: [],\n      radarList1: [],\n      radarList2: [],\n      isLoading: false,\n      time: [],\n      sumDay: 0,\n      today: new Date(),\n      month: null\n    };\n  },\n  computed: _objectSpread({}, mapState(['system', 'babyInfo', 'memberInfo'])),\n  created: function created() {\n    this.month = this.today.getMonth() + 1;\n    this.getUserReport();\n    this.getSumTime();\n  },\n  methods: {\n    getUserReport: function getUserReport() {\n      var _this = this;\n\n      var radar = [];\n      var radarVal = [{\n        value: []\n      }];\n      this.$axios.getUserReport(this.month).then(function (res) {\n        _this.peportList = res.data.data.list;\n        var list = res.data.data.list;\n        var radarObj = {};\n        var radarArray = [];\n        list.forEach(function (item, index) {\n          radarObj.name = item.ability;\n          radarObj.max = 100;\n          radar.push(radarObj);\n          radarArray.push(item.score);\n        });\n        radarVal[0].value = radarArray;\n        _this.radarList1 = radar;\n        _this.radarList2 = radarVal;\n        _this.isLoading = true;\n      })[\"catch\"](function (err) {});\n    },\n    getSumTime: function getSumTime() {\n      var _this2 = this;\n\n      this.$axios.sumTime(this.month).then(function (res) {\n        var list = [];\n        _this2.sumDay = res.data.data.clockDays;\n        _this2.time = res.data.data;\n        var str = _this2.time.timeLength;\n        var array = str.split('小时');\n        list.push(array[0]);\n        var m = array[1].split('分');\n        list.push(m[0]);\n        _this2.time = list;\n      })[\"catch\"](function (err) {});\n    }\n  },\n  components: {\n    'v-title': Title,\n    'v-radar': Radar\n  }\n};",null]}